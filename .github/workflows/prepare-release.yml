name: Prepare Release
on:
  workflow_call:
    inputs:
      ref:
        description: 'The branch ref to work on.'
        required: true
        type: string
      exclude-labels:
        description: 'Labels of issues and PRs that should be excluded from the changelog.'
        default: 'duplicate,question,invalid,wontfix,skip-changelog'
        type: string
      release-branch:
        description: 'The branch to limit the PRs to'
        default: ''
        type: string

jobs:
  calculate_next_version:
    uses: codenamephp/workflows.common/.github/workflows/calculate-next-version.yml@production
  draft_release:
    needs: calculate_next_version
    uses: codenamephp/workflows.common/.github/workflows/draft-release.yml@production
    with:
      version: ${{ needs.calculate_next_version.outputs.version }}

  update_changelog:
    uses: codenamephp/workflows.common/.github/workflows/update-changelog.yml@production
    needs: calculate_next_version
    with:
      ref: ${{inputs.ref}}
      exclude-labels: ${{ inputs.exclude-labels }}
      future-release: ${{ needs.calculate_next_version.outputs.version }}
      release-branch: ${{ inputs.release-branch }}

  bump_cookbook_version:
    name: Bump cookbook version and check upload
    runs-on: ubuntu-latest
    needs: calculate_next_version
    env:
      CHEF_LICENSE: accept-no-persist
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install chef
        uses: actionshub/chef-install@main

      - name: Create key
        run: 'echo "$CHEF_KEY" > codenamephp.pem'
        shell: bash
        env:
          CHEF_KEY: ${{ secrets.CHEF_KEY }}

      - name: Install spork
        run: chef exec gem install knife-spork

      - name: Get cookbook name
        id: get_cookbook_name
        run: |
          export COOKBOOK_NAME=`chef exec ruby -e 'require "chef/cookbook/metadata"; metadata = Chef::Cookbook::Metadata.new; metadata.from_file("metadata.rb"); puts metadata.name'`
          echo "::set-output name=cookbook_name::$COOKBOOK_NAME"

      - name: Bump cookbook version in metadata
        run: knife spork bump ${{ steps.get_cookbook_name.outputs.cookbook_name }} manual ${{ format('{0}', needs.calculate_next_version.outputs.version) }} -o ..

      - name: Check cookbook version in metadata
        run: knife spork check ${{ steps.get_cookbook_name.outputs.cookbook_name }} -o .. --fail

      - name: Dry run deploy to supermarket
        run: knife supermarket share ${{ steps.get_cookbook_name.outputs.cookbook_name }} -o .. --dry-run

      - name: commit bumped metadata
        uses: EndBug/add-and-commit@v7
        with:
          message: "[METADATA] Updated version"
          add: "metadata.rb"
          signoff: true
